<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on WeiWeiWesley</title>
    <link>/tags/docker/</link>
    <description>Recent content in docker on WeiWeiWesley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Oct 2020 15:04:13 +0800</lastBuildDate><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Day23 Kubernetes (Kubernetes on Docker Desktop &amp; Pod Lifetime)</title>
      <link>/posts/2020-ithome-day23/</link>
      <pubDate>Thu, 01 Oct 2020 15:04:13 +0800</pubDate>
      
      <guid>/posts/2020-ithome-day23/</guid>
      <description>&lt;p&gt;今天會用一個簡單範例跟大家分享 Pods 的生命週期，藉由範例觀察 Pods status 的變化。但在此之前先，另外介紹一個在本機啟用 Kubernetes 的方式，如果有安裝 Docker Desktop 的話，可以透過介面的方式，產出本地運行的 Kubernetes cluster，與 MineKube 不同的是它提供 GUI，這在我們觀察狀態進行監控的時候會更加友善。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Day14 Dockerfile &amp; Docker-Compose</title>
      <link>/posts/2020-ithome-day14/</link>
      <pubDate>Tue, 22 Sep 2020 10:38:17 +0800</pubDate>
      
      <guid>/posts/2020-ithome-day14/</guid>
      <description>&lt;p&gt;本日文章內容目標能讓我們了解，Dockerfile 撰寫的格式與啟動的效果，並且使用 docker-compose 啟動多個 containers，並建立兩個 containers 溝通的橋樑。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Day13 Docker</title>
      <link>/posts/2020-ithome-day13/</link>
      <pubDate>Mon, 21 Sep 2020 11:31:32 +0800</pubDate>
      
      <guid>/posts/2020-ithome-day13/</guid>
      <description>&lt;p&gt;為了讓我們可以快速獲得乾淨的測試資料庫，與後續 Go Distributed at Kubernetes，於此開始介紹一些關於容器的概念。希望能夠幫助一些對於環境苦手的朋友，可以在開發上有一個更快速乾淨的選擇。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>30Days ELK - Day20 Dockerfile &amp; docker-compose</title>
      <link>/posts/2017-01-04-elk/</link>
      <pubDate>Wed, 04 Jan 2017 20:50:41 +0800</pubDate>
      
      <guid>/posts/2017-01-04-elk/</guid>
      <description>&lt;p&gt;有了 docker 基本的概念後我們回頭看一下 docker 的設定檔 Dockerfile 與 docker-compose.yml，瞭解一下 logstash, elasticsearch, kibana 的虛擬機是怎麼被設定與啟用的。有了這些知識後能幫助我們解決一些 E.L.K 使用上或配置上的問題。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>30Days ELK - Day19 Docker</title>
      <link>/posts/2017-01-03-elk/</link>
      <pubDate>Tue, 03 Jan 2017 19:47:23 +0800</pubDate>
      
      <guid>/posts/2017-01-03-elk/</guid>
      <description>&lt;p&gt;你以為看錯標題了嗎？沒有哦～就是 docker 沒錯，為了延續後面我要講一些插件與優化配置的方式，這邊必須簡單提一下 docker 讓後面在能夠比較簡單的銜接上，真的是簡單講一下因為接觸 docker 時間不夠長，讓我們快速走過吧。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
